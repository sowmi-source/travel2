# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: newapp-deployment
#   labels:
#     app: springboot # what ever name 
# spec:
#   replicas: 2
#   selector:                
#     matchLabels:            # match this labels  check any pod 
#       app: springboot
#   template:                  # using how many contrainer ...sent 
#     metadata:
#       labels:
#         app: springboot
#     spec:       
#       containers:
#       - name: newappcontiner
#         image: newapp
#         ports:
#         - containerPort: 80



# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: travel-api-ingress
#   namespace: travel
#   annotations:
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   rules:
#   - host:  travel.localhost 
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: travel-api-service
#             port:
#               number: 8443


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/backend-protocol: /
# spec:
#   tls:
#     - hosts:
#         - travel-api.local
#       secretName: travel-api-tls
#   rules:
#     - host: travel-api.local
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: travel-api-service
#                 port:
#                   number: 443


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: travel-api-ingress
  namespace: new-travel-api
spec:
  rules:
    - host: travel-api.test
      http:
        paths:
          - path: /api/getPackages
            pathType: Prefix
            backend:
              service:
                name: travel-api-service
                port:
                  number: 8442

